// src/components/calc/CalculationResults.jsx
import PropTypes from 'prop-types';
import { useEffect, useState } from 'react';
import './CalculationResults.css';

function CalculationResults({ data }) {
  const [showAnimation, setShowAnimation] = useState(false);

  useEffect(() => {
    if (data) {
      setShowAnimation(true);
      const timer = setTimeout(() => setShowAnimation(false), 1000);
      return () => clearTimeout(timer);
    }
  }, [data]);

  if (!data) {
    return (
      <div className="results-placeholder">
        <p className="placeholder-text">
          –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É —ñ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å —Ä–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        </p>
      </div>
    );
  }

  return (
    <div className={`results-container ${showAnimation ? 'animate-slide-up' : ''}`}>
      <h3 className="results-title">
        {data.selectedSymbol
          ? `–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥–ª—è ${data.selectedSymbol}`
          : '–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É'}
      </h3>

      <div className="results-list">
        <div className="result-item">
          <span className="result-label">üìà –ü–æ—á–∞—Ç–∫–æ–≤–∞ –º–∞—Ä–∂–∞:</span>
          <span className="result-value">${data.initialMargin.toFixed(2)}</span>
        </div>

        <div className="result-item">
          <span className="result-label">üõ°Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –º–∞—Ä–∂–∞:</span>
          <span className="result-value">${data.recommendedMargin.toFixed(2)}</span>
        </div>

        <div className="result-item">
          <span className="result-label">üö® –¶—ñ–Ω–∞ –ª—ñ–∫–≤—ñ–¥–∞—Ü—ñ—ó {data.positionType === 'short' ? '(–¥–ª—è —à–æ—Ä—Ç—É)' : ''}:</span>
          <span className="result-value result-value-error">
            ${data.liquidationPrice.toFixed(2)}
          </span>
        </div>

        <div className="result-item">
          <span className="result-label">üìâ –†—É—Ö —Ü—ñ–Ω–∏ –¥–æ –ª—ñ–∫–≤—ñ–¥–∞—Ü—ñ—ó:</span>
          <span className="result-value">{data.liquidationMove.toFixed(2)}%</span>
        </div>

        <div className="result-item">
          <span className="result-label">üí∏ –ó–∞–≥–∞–ª—å–Ω—ñ –∫–æ–º—ñ—Å—ñ—ó:</span>
          <span className="result-value">${data.totalFees.toFixed(2)}</span>
        </div>

        <div className="result-item result-item-highlight">
          <span className="result-label">ü™ô –ü—Ä–∏–±—É—Ç–æ–∫ –≤—ñ–¥ —Ñ–∞–Ω–¥–∏–Ω–≥—É (8 –≥–æ–¥):</span>
          <span className={`result-value ${data.estimatedFundingProfit >= 0 ? 'result-value-positive' : 'result-value-negative'}`}>
            ${data.estimatedFundingProfit.toFixed(2)}
          </span>
        </div>

        <div className="result-item">
          <span className="result-label">üìÜ –©–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ (—Ñ–∞–Ω–¥–∏–Ω–≥):</span>
          <span className="result-value">${data.estimatedDailyFundingProfit.toFixed(2)}</span>
        </div>

        <div className="result-item">
          <span className="result-label">üìÖ –ú—ñ—Å—è—á–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ (—Ñ–∞–Ω–¥–∏–Ω–≥):</span>
          <span className="result-value">${data.estimatedMonthlyFundingProfit.toFixed(2)}</span>
        </div>

        <div className="result-item">
          <span className="result-label">üìà –†—ñ—á–Ω–∞ –ø—Ä–∏–±—É—Ç–∫–æ–≤—ñ—Å—Ç—å (APR):</span>
          <span className="result-value">{data.fundingAPR.toFixed(2)}%</span>
        </div>

        <div className="result-item result-item-net-profit">
          <span className="result-label">üí∞ –ß–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ (—Ñ–∞–Ω–¥–∏–Ω–≥ - –∫–æ–º—ñ—Å—ñ—ó):</span>
          <span className={`result-value ${data.netProfit >= 0 ? 'result-value-positive' : 'result-value-negative'}`}>
            ${data.netProfit.toFixed(2)}
          </span>
        </div>
      </div>
    </div>
  );
}

CalculationResults.propTypes = {
  data: PropTypes.shape({
    selectedSymbol: PropTypes.string,
    initialMargin: PropTypes.number,
    recommendedMargin: PropTypes.number,
    liquidationPrice: PropTypes.number,
    liquidationMove: PropTypes.number,
    totalFees: PropTypes.number,
    estimatedFundingProfit: PropTypes.number,
    estimatedDailyFundingProfit: PropTypes.number,
    estimatedMonthlyFundingProfit: PropTypes.number,
    fundingAPR: PropTypes.number,
    netProfit: PropTypes.number,
    positionType: PropTypes.oneOf(['long', 'short']),
  }),
};

export default CalculationResults;
import PropTypes from 'prop-types';
import { useEffect, useState } from 'react';

function CalculationResults({ data }) {
  const [showAnimation, setShowAnimation] = useState(false);

  useEffect(() => {
    if (data) {
      setShowAnimation(true);
      const timer = setTimeout(() => setShowAnimation(false), 1000);
      return () => clearTimeout(timer);
    }
  }, [data]);

  if (!data) {
    return (
      <div className="flex items-center justify-center h-full min-h-[300px] bg-gray-50 rounded-xl border border-gray-200">
        <p className="text-gray-500 italic">
          –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É —ñ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å —Ä–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        </p>
      </div>
    );
  }

  return (
    <div
      className={`bg-[rgb(var(--card))] rounded-xl p-6 border border-[rgb(var(--border))] 
              transition-all duration-500 
              ${showAnimation ? 'animate-slide-up' : ''}`}
    >
      <h3 className="text-xl font-semibold text-[rgb(var(--foreground))] mb-4">
        {data.selectedSymbol
          ? `–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥–ª—è ${data.selectedSymbol}`
          : '–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É'
        }
      </h3>

      <div className="space-y-4">
        <div className="flex justify-between items-center p-3 bg-[rgb(var(--card))/50] rounded-lg shadow-sm border border-[rgb(var(--border))]">
          <span className="font-medium">üìà –ü–æ—á–∞—Ç–∫–æ–≤–∞ –º–∞—Ä–∂–∞:</span>
          <span className="font-semibold text-lg">${data.initialMargin.toFixed(2)}</span>
        </div>

        <div className="flex justify-between items-center p-3 bg-[rgb(var(--card))/50] rounded-lg shadow-sm border border-[rgb(var(--border))]">
          <span className="font-medium">üõ°Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –º–∞—Ä–∂–∞:</span>
          <span className="font-semibold text-lg">${data.recommendedMargin.toFixed(2)}</span>
        </div>

        <div className="flex justify-between items-center p-3 bg-[rgb(var(--card))/50] rounded-lg shadow-sm border border-[rgb(var(--border))]">
          <span className="font-medium">üö® –¶—ñ–Ω–∞ –ª—ñ–∫–≤—ñ–¥–∞—Ü—ñ—ó {data.positionType === 'short' ? '(–¥–ª—è —à–æ—Ä—Ç—É)' : ''}:</span>
          <span className="font-semibold text-lg text-error-500">
            ${data.liquidationPrice.toFixed(2)}
          </span>
        </div>

        <div className="flex justify-between items-center p-3 bg-[rgb(var(--card))/50] rounded-lg shadow-sm border border-[rgb(var(--border))]">
          <span className="font-medium">üìâ –†—É—Ö —Ü—ñ–Ω–∏ –¥–æ –ª—ñ–∫–≤—ñ–¥–∞—Ü—ñ—ó:</span>
          <span className="font-semibold text-lg">
            {data.liquidationMove.toFixed(2)}%
          </span>
        </div>

        <div className="flex justify-between items-center p-3 bg-[rgb(var(--card))/50] rounded-lg shadow-sm border border-[rgb(var(--border))]">
          <span className="font-medium">üí∏ –ó–∞–≥–∞–ª—å–Ω—ñ –∫–æ–º—ñ—Å—ñ—ó:</span>
          <span className="font-semibold text-lg">${data.totalFees.toFixed(2)}</span>
        </div>

        <div className="flex justify-between items-center p-3 border-l-4 border-accent-500 rounded-lg shadow-sm bg-[rgb(var(--card))/50]">
          <span className="font-medium">ü™ô –ü—Ä–∏–±—É—Ç–æ–∫ –≤—ñ–¥ —Ñ–∞–Ω–¥–∏–Ω–≥—É (8 –≥–æ–¥):</span>
          <span className={`font-semibold text-lg ${data.estimatedFundingProfit >= 0 ? 'text-accent-500' : 'text-error-500'}`}>
            ${data.estimatedFundingProfit.toFixed(2)}
          </span>
        </div>
        <div className="flex justify-between items-center p-3 bg-[rgb(var(--card))/50] rounded-lg shadow-sm border border-[rgb(var(--border))]">
          <span className="font-medium">üìÜ –©–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ (—Ñ–∞–Ω–¥–∏–Ω–≥):</span>
          <span className="font-semibold text-lg">
            ${data.estimatedDailyFundingProfit.toFixed(2)}
          </span>
        </div>

        <div className="flex justify-between items-center p-3 bg-[rgb(var(--card))/50] rounded-lg shadow-sm border border-[rgb(var(--border))]">
          <span className="font-medium">üìÖ –ú—ñ—Å—è—á–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ (—Ñ–∞–Ω–¥–∏–Ω–≥):</span>
          <span className="font-semibold text-lg">
            ${data.estimatedMonthlyFundingProfit.toFixed(2)}
          </span>
        </div>

        <div className="flex justify-between items-center p-3 bg-[rgb(var(--card))/50] rounded-lg shadow-sm border border-[rgb(var(--border))]">
          <span className="font-medium">üìà –†—ñ—á–Ω–∞ –ø—Ä–∏–±—É—Ç–∫–æ–≤—ñ—Å—Ç—å (APR):</span>
          <span className="font-semibold text-lg">
            {data.fundingAPR.toFixed(2)}%
          </span>
        </div>
        <div className="flex justify-between items-center p-3 bg-green-50 rounded-lg border border-green-400">
          <span className="font-medium">üí∞ –ß–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ (—Ñ–∞–Ω–¥–∏–Ω–≥ - –∫–æ–º—ñ—Å—ñ—ó):</span>
          <span className={`font-semibold text-lg ${data.netProfit >= 0 ? 'text-green-600' : 'text-red-500'}`}>
            ${data.netProfit.toFixed(2)}
          </span>
        </div>

      </div>
    </div>
  );
}

CalculationResults.propTypes = {
  data: PropTypes.shape({
    selectedSymbol: PropTypes.string,
    initialMargin: PropTypes.number,
    recommendedMargin: PropTypes.number,
    liquidationPrice: PropTypes.number,
    liquidationMove: PropTypes.number,
    totalFees: PropTypes.number,
    estimatedFundingProfit: PropTypes.number,
    estimatedDailyFundingProfit: PropTypes.number,
    estimatedMonthlyFundingProfit: PropTypes.number,
    fundingAPR: PropTypes.number,
    netProfit: PropTypes.number,
    positionType: PropTypes.oneOf(['long', 'short']),
  }),
};

export default CalculationResults;
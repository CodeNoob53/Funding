import PropTypes from 'prop-types';
import ExchangeIcon from './ExchangeIcon';

function CalculationResults({ data }) {
  const ResultRow = ({ label, value, isHighlight = false, info = null, icon = null }) => (
    <div className={`flex justify-between items-center p-3 rounded-lg
                    ${isHighlight ? 'bg-[rgb(var(--primary))/10] border border-[rgb(var(--primary))/20]' 
                                  : 'bg-[rgb(var(--foreground))/5]'}`
    }>
      <div className="flex flex-col">
        <div className="flex items-center gap-2">
          {icon}
          <span className="font-medium">{label}</span>
        </div>
        {info && <span className="text-xs text-[rgb(var(--foreground))/60] mt-1">{info}</span>}
      </div>
      <span className="font-semibold">{value}</span>
    </div>
  );

  ResultRow.propTypes = {
    label: PropTypes.string.isRequired,
    value: PropTypes.string.isRequired,
    isHighlight: PropTypes.bool,
    info: PropTypes.string,
    icon: PropTypes.node
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–µ–ª
  const safeFormat = (num, prefix = '', suffix = '', decimals = 2) => {
    if (num === undefined || num === null) return `${prefix}0${suffix}`;
    return `${prefix}${parseFloat(num).toFixed(decimals)}${suffix}`;
  };

  return (
    <div className="space-y-3 animate-slide">
      {data.selectedSymbol && (
        <div className="mb-4">
          <h3 className="text-lg font-semibold">
            –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥–ª—è {data.selectedSymbol}
          </h3>
          <div className="flex items-center gap-2 mt-1">
            <span className={`px-2 py-1 rounded-md text-xs font-medium 
                            ${data.positionType === 'long' 
                            ? 'bg-green-500/10 text-green-500' 
                            : 'bg-red-500/10 text-red-500'}`}>
              {data.positionType === 'long' ? 'Long' : 'Short'}
            </span>
            {data.selectedExchange && (
              <div className="flex items-center gap-1 px-2 py-1 bg-[rgb(var(--foreground))/5 rounded-md text-xs">
                <ExchangeIcon exchange={data.selectedExchange} size={12} />
                <span>{data.selectedExchange}</span>
              </div>
            )}
          </div>
        </div>
      )}
      
      <ResultRow 
        label="–ü–æ—á–∞—Ç–∫–æ–≤–∞ –º–∞—Ä–∂–∞"
        value={safeFormat(data.initialMargin, '$')}
        info="–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–æ–∑–∏—Ü—ñ—ó"
        icon={<span role="img" aria-label="chart">üìä</span>}
      />
      
      <ResultRow 
        label="–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –º–∞—Ä–∂–∞"
        value={safeFormat(data.recommendedMargin, '$')}
        info="–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ —Å—É–º–∞ –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ—ó —Ç–æ—Ä–≥—ñ–≤–ª—ñ"
        icon={<span role="img" aria-label="shield">üõ°Ô∏è</span>}
      />
      
      <ResultRow 
        label="–¶—ñ–Ω–∞ –ª—ñ–∫–≤—ñ–¥–∞—Ü—ñ—ó"
        value={safeFormat(data.liquidationPrice, '$', '', 6)}
        info="–¶—ñ–Ω–∞, –ø—Ä–∏ —è–∫—ñ–π –ø–æ–∑–∏—Ü—ñ—è –±—É–¥–µ –ª—ñ–∫–≤—ñ–¥–æ–≤–∞–Ω–∞"
        icon={<span role="img" aria-label="alert">üö®</span>}
      />
      
      <ResultRow 
        label="–í—ñ–¥—Å–æ—Ç–æ–∫ –¥–æ –ª—ñ–∫–≤—ñ–¥–∞—Ü—ñ—ó"
        value={safeFormat(data.liquidationMove, '', '%')}
        info="–ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∑–º—ñ–Ω–∞ —Ü—ñ–Ω–∏ –¥–ª—è –ª—ñ–∫–≤—ñ–¥–∞—Ü—ñ—ó"
        icon={<span role="img" aria-label="chart-down">üìâ</span>}
      />
      
      <ResultRow 
        label="–ó–∞–≥–∞–ª—å–Ω—ñ –∫–æ–º—ñ—Å—ñ—ó"
        value={safeFormat(data.totalFees, '$')}
        info="–°—É–º–∞ –∫–æ–º—ñ—Å—ñ–π –∑–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è"
        icon={<span role="img" aria-label="money">üí∏</span>}
      />
      
      <div className="pt-3 border-t border-[rgb(var(--border))]">
        <h4 className="text-md font-semibold mb-3 flex items-center gap-2">
          <span role="img" aria-label="coin">ü™ô</span>
          –ü—Ä–∏–±—É—Ç–æ–∫ –≤—ñ–¥ —Ñ–∞–Ω–¥–∏–Ω–≥—É
        </h4>
        
        <ResultRow 
          label="–ó–∞ 8 –≥–æ–¥–∏–Ω"
          value={safeFormat(data.estimatedFundingProfit, '$')}
          isHighlight={true}
        />
        
        <ResultRow 
          label="–ó–∞ –¥–µ–Ω—å"
          value={safeFormat(data.estimatedDailyFundingProfit, '$')}
        />
        
        <ResultRow 
          label="–ó–∞ —Ç–∏–∂–¥–µ–Ω—å"
          value={safeFormat(data.estimatedDailyFundingProfit * 7, '$')}
        />
      </div>
    </div>
  );
}

CalculationResults.propTypes = {
  data: PropTypes.shape({
    selectedSymbol: PropTypes.string,
    initialMargin: PropTypes.number,
    recommendedMargin: PropTypes.number,
    liquidationPrice: PropTypes.number,
    liquidationMove: PropTypes.number,
    totalFees: PropTypes.number,
    estimatedFundingProfit: PropTypes.number,
    estimatedDailyFundingProfit: PropTypes.number,
    selectedExchange: PropTypes.string,
    positionType: PropTypes.oneOf(['long', 'short']),
  }).isRequired,
};

export default CalculationResults;